//@version=6
indicator("EMA RSI Showdown v6", overlay=true)

// MACD Crossover
int fastLength = input.int(8, minval=1, title="Fast Length")
int slowLength = input.int(16, minval=1, title="Slow Length")
int signalLength = input.int(11, minval=1, title="Signal Length")

float fastMA = ta.ema(close, fastLength)
float slowMA = ta.ema(close, slowLength)
float macd = fastMA - slowMA
float signal = ta.sma(macd, signalLength)

var int pos = 0
pos := signal < macd ? 1 : signal > macd ? -1 : nz(pos[1], 0)

bool MACDcrossover = pos == 1 and pos[1] == -1
bool MACDcrossunder = pos == -1 and pos[1] == 1


// Buy/Sell Boxes
int boxLen = input.int(8, minval=1, title="Box Length")
// FIXED: Replaced invalid 'source' keyword with 'float'.
float boxSrc = input.source(close, title="Box Source")
float boxOut = ta.ema(boxSrc, boxLen)


// RSI EMA Oscillator
// FIXED: Replaced invalid 'source' keyword with 'float'.
float src = close
int rsiLen = input.int(14, minval=1, title="RSI Length")
int emaRsiLen = input.int(12, minval=1, title="EMA of RSI Length")
float up = ta.rma(math.max(ta.change(src), 0), rsiLen)
// FIXED: Corrected undefined 'len' variable to 'rsiLen'.
float down = ta.rma(-math.min(ta.change(src), 0), rsiLen)
float rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
float emaRSI = ta.ema(rsi, emaRsiLen)
bool emaRSISell = emaRSI > 66
bool emaRSIBuy = emaRSI < 33


// Final Buy/Sell signal arguments
bool longSignal = emaRSIBuy and MACDcrossover and close >= boxOut
bool shortSignal = emaRSISell and MACDcrossunder and close < boxOut
bool mixedAlert = longSignal or shortSignal


// Plot Buy/Sell signal arrows
plotshape(series=shortSignal, title="Sell Signal", style=shape.arrowdown, location=location.bottom, color=#FF5252, text="Sell", size=size.small)
plotshape(series=longSignal, title="Buy Signal", style=shape.arrowup, location=location.bottom, color=#00E676, text="Buy", size=size.small)
alertcondition(mixedAlert, title='Entry Signal', message='Entry Signal')
